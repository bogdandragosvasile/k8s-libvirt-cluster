---
- name: Configure load balancer nodes
  hosts: load_balancer
  become: true
  tasks:
    - name: Create check_apiserver script
      ansible.builtin.copy:
        dest: "/etc/keepalived/check_apiserver.sh"
        mode: '0755'
        content: |
          #!/bin/sh
          errorExit() {
            echo "*** $*" 1>&2
            exit 1
          }
          curl --silent --max-time 2 --insecure https://localhost:{{ K8S_API_SERVER_PORT }}/ -o /dev/null || errorExit "Error GET https://localhost:{{ K8S_API_SERVER_PORT }}/"
          if ip addr | grep -q {{ VIRTUAL_IP }}; then
            curl --silent --max-time 2 --insecure https://{{ VIRTUAL_IP }}:{{ K8S_API_SERVER_PORT }}/ -o /dev/null || errorExit "Error GET https://{{ VIRTUAL_IP }}:{{ K8S_API_SERVER_PORT }}/"
          fi

    - name: Configure HAProxy
      ansible.builtin.copy:
        dest: "/etc/haproxy/haproxy.cfg"
        content: |
          global
            maxconn 50000
            log /dev/log local0
            user haproxy
            group haproxy
            stats socket /var/lib/haproxy/stats
          defaults
            log global
            timeout connect 10s
            timeout client 30s
            timeout server 30s
          frontend kubernetes-frontend
            bind *:6443
            mode tcp
            option tcplog
            default_backend kubernetes-backend
          backend kubernetes-backend
            option httpchk GET /healthz
            http-check expect status 200
            mode tcp
            option ssl-hello-chk
            balance roundrobin
            server kcontrolplane1 {{ IP_HOST_CP1 }}:6443 check
            server kcontrolplane2 {{ IP_HOST_CP2 }}:6443 check
            server kcontrolplane3 {{ IP_HOST_CP3 }}:6443 check

- name: Configure keepalived on lb1 (MASTER)
  hosts: loadbalancer1
  become: true
  tasks:
    - name: Configure keepalived as MASTER
      ansible.builtin.copy:
        dest: "/etc/keepalived/keepalived.conf"
        content: |
          vrrp_script check_apiserver {
            script "/etc/keepalived/check_apiserver.sh"
            interval 3
            timeout 10
            fall 5
            rise 2
            weight -2
          }
          vrrp_instance VI_1 {
            state MASTER
            interface {{ ansible_default_ipv4.interface }}
            virtual_router_id 1
            priority 101
            advert_int 5
            authentication {
              auth_type PASS
              auth_pass {{ PASSWORD_KEEPALIVED }}
            }
            virtual_ipaddress {
              {{ VIRTUAL_IP }}
            }
            track_script {
              check_apiserver
            }
          }

- name: Configure keepalived on lb2 (BACKUP)
  hosts: loadbalancer2
  become: true
  tasks:
    - name: Configure keepalived as BACKUP
      ansible.builtin.copy:
        dest: "/etc/keepalived/keepalived.conf"
        content: |
          vrrp_script check_apiserver {
            script "/etc/keepalived/check_apiserver.sh"
            interval 3
            timeout 10
            fall 5
            rise 2
            weight 2
          }
          vrrp_instance VI_1 {
            state BACKUP
            interface {{ ansible_default_ipv4.interface }}
            virtual_router_id 1
            priority 100
            advert_int 5
            authentication {
              auth_type PASS
              auth_pass {{ PASSWORD_KEEPALIVED }}
            }
            virtual_ipaddress {
              {{ VIRTUAL_IP }}
            }
            track_script {
              check_apiserver
            }
          }

- name: Enable HA services
  hosts: load_balancer
  become: true
  tasks:
    - name: Start and enable keepalived
      ansible.builtin.systemd:
        state: restarted
        name: keepalived
        enabled: true
    - name: Start and enable haproxy
      ansible.builtin.systemd:
        state: restarted
        name: haproxy
        enabled: true
