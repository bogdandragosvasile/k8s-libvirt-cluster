---
- name: Configure Load Balancer (Bootstrap Configuration)
  hosts: load_balancer
  become: true
  vars_files:
    - vars.yaml
  tasks:
    - name: Install HAProxy
      ansible.builtin.apt:
        name: haproxy
        state: present
        update_cache: true

    - name: Install keepalived
      ansible.builtin.apt:
        name: keepalived
        state: present

    - name: Enable and start HAProxy
      ansible.builtin.systemd:
        name: haproxy
        enabled: true
        state: started

    - name: Enable and start keepalived
      ansible.builtin.systemd:
        name: keepalived
        enabled: true
        state: started

    - name: Configure HAProxy (Bootstrap mode - no health checks)
      ansible.builtin.copy:
        dest: "/etc/haproxy/haproxy.cfg"
        content: |
          global
            maxconn 50000
            log /dev/log local0
            user haproxy
            group haproxy
            stats socket /var/lib/haproxy/stats
            daemon

          defaults
            log global
            mode tcp
            timeout connect 10s
            timeout client 30s
            timeout server 30s
            retries 3

          frontend kubernetes-frontend
            bind *:{{ K8S_API_SERVER_PORT }}
            mode tcp
            option tcplog
            default_backend kubernetes-backend

          backend kubernetes-backend
            mode tcp
            balance roundrobin
            # Bootstrap configuration - only first control plane, no health checks
            server kcontrolplane1 {{ IP_HOST_CP1 }}:{{ K8S_API_SERVER_PORT }}
            # Additional control planes will be added after cluster initialization
      notify: restart haproxy

    - name: Configure keepalived
      ansible.builtin.copy:
        dest: "/etc/keepalived/keepalived.conf"
        content: |
          vrrp_script chk_haproxy {
            script "/bin/curl -f http://localhost:{{ K8S_API_SERVER_PORT }} || exit 1"
            interval 2
            weight -2
            fall 3
            rise 2
          }

          vrrp_instance VI_1 {
            state MASTER
            interface {{ ansible_default_ipv4.interface }}
            virtual_router_id 51
            priority 100
            advert_int 1
            authentication {
              auth_type PASS
              auth_pass k8s-cluster
            }
            virtual_ipaddress {
              {{ VIRTUAL_IP }}/24
            }
            track_script {
              chk_haproxy
            }
          }
      notify: restart keepalived

    - name: Enable IP forwarding
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        state: present
        sysctl_set: true

    - name: Configure rsyslog for HAProxy
      ansible.builtin.copy:
        dest: "/etc/rsyslog.d/49-haproxy.conf"
        content: |
          $ModLoad imudp
          $UDPServerRun 514
          $UDPServerAddress 127.0.0.1
          local0.*    /var/log/haproxy.log
          & stop
      notify: restart rsyslog

  handlers:
    - name: restart haproxy
      ansible.builtin.systemd:
        name: haproxy
        state: restarted

    - name: restart keepalived
      ansible.builtin.systemd:
        name: keepalived
        state: restarted

    - name: restart rsyslog
      ansible.builtin.systemd:
        name: rsyslog
        state: restarted
