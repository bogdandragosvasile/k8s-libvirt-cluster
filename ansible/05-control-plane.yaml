---
- hosts: control1
  become: yes
  tasks:
    - name: Initialise the cluster
      shell: kubeadm init --control-plane-endpoint="{{ VIRTUAL_IP }}:{{ K8S_API_SERVER_PORT }}" --upload-certs --apiserver-advertise-address={{ IP_HOST_CP1 }} --pod-network-cidr=192.168.0.0/16
      register: cluster_initialized

    - debug: msg="{{ cluster_initialized.stdout }}"

    - name: Create .kube directory for debian user
      file:
        path: /home/debian/.kube
        state: directory
        mode: 0755
        owner: debian

    - name: Copy admin.conf to debian user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/debian/.kube/config
        remote_src: yes
        owner: debian
        mode: 0600

    - name: Get join command
      shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Set join command
      set_fact:
        join_command: "{{ join_command_raw.stdout_lines[0] }}"

    - name: Get cert
      shell: kubeadm init phase upload-certs --upload-certs
      register: get_cert_raw

    - name: Set cert
      set_fact:
        cert_command: "{{ get_cert_raw.stdout_lines[2] }}"

    - name: Install Pod network (CNI)
      shell: kubectl --kubeconfig=/etc/kubernetes/admin.conf create -f https://raw.githubusercontent.com/projectcalico/calico/{{ VERSION_CALICO }}/manifests/calico.yaml
      args:
        chdir: $HOME
        creates: pod_network_setup.txt

- hosts: control2,control3
  become: yes
  tasks:
    - name: Join control-plane
      shell: "{{ hostvars['control1'].join_command }} --control-plane --certificate-key={{ hostvars['control1'].cert_command }} --apiserver-advertise-address={{ ansible_default_ipv4.address }} >> node_joined.txt"
      register: node_joined

- hosts: control_plane
  become: yes
  tasks:
    - name: Create .kube directory for debian user
      file:
        path: /home/debian/.kube
        state: directory
        mode: 0755
        owner: debian

    - name: Copy admin.conf to debian user's kube config
      copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/debian/.kube/config
        remote_src: yes
        owner: debian
        mode: 0600
