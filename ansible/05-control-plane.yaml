---
- name: Initialize first control plane node
  hosts: control_plane_init
  become: true
  vars_files:
    - vars.yaml
  tasks:
    - name: Initialize the cluster
      ansible.builtin.shell: |
        kubeadm init \
          --control-plane-endpoint="{{ VIRTUAL_IP }}:{{ K8S_API_SERVER_PORT }}" \
          --upload-certs \
          --apiserver-advertise-address={{ ansible_default_ipv4.address }} \
          --pod-network-cidr={{ POD_CIDR_CALICO }}
      args:
        creates: /etc/kubernetes/admin.conf
      register: cluster_initialized

    - name: Display cluster init output
      ansible.builtin.debug:
        msg: "{{ cluster_initialized.stdout }}"

    - name: Create .kube directory for ubuntu user
      ansible.builtin.file:
        path: /home/ubuntu/.kube
        state: directory
        mode: '0755'
        owner: ubuntu
        group: ubuntu

    - name: Copy admin.conf to ubuntu user's kube config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
        group: ubuntu
        mode: '0600'

    - name: Get join command
      ansible.builtin.shell: kubeadm token create --print-join-command
      register: join_command_raw

    - name: Set join command fact
      ansible.builtin.set_fact:
        join_command: "{{ join_command_raw.stdout }}"

    - name: Get certificate key
      ansible.builtin.shell: kubeadm init phase upload-certs --upload-certs
      register: get_cert_raw

    - name: Set certificate key fact
      ansible.builtin.set_fact:
        cert_command: "{{ (get_cert_raw.stdout_lines | select('match','^[0-9a-fA-F]{64}$') | list | first) | default('') }}"

    - name: Install Calico CNI
      ansible.builtin.shell: |
        kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f https://raw.githubusercontent.com/projectcalico/calico/{{ VERSION_CALICO }}/manifests/calico.yaml

- name: Join additional control plane nodes
  hosts: control_plane_join
  become: true
  vars_files:
    - vars.yaml
  tasks:
    - name: Wait for first control plane to be ready
      ansible.builtin.wait_for:
        host: "{{ VIRTUAL_IP }}"
        port: "{{ K8S_API_SERVER_PORT }}"
        delay: 10
        timeout: 300

    - name: Join control plane
      ansible.builtin.shell: |
        {{ hostvars[groups['control_plane_init'][0]].join_command }} \
          --control-plane \
          --certificate-key={{ hostvars[groups['control_plane_init'][0]].cert_command }} \
          --apiserver-advertise-address={{ ansible_default_ipv4.address }}
      args:
        creates: /etc/kubernetes/admin.conf

- name: Setup kubeconfig on all control plane nodes
  hosts: control_plane
  become: true
  vars_files:
    - vars.yaml
  tasks:
    - name: Create .kube directory for ubuntu user
      ansible.builtin.file:
        path: /home/ubuntu/.kube
        state: directory
        mode: '0755'
        owner: ubuntu
        group: ubuntu

    - name: Copy admin.conf to ubuntu user's kube config
      ansible.builtin.copy:
        src: /etc/kubernetes/admin.conf
        dest: /home/ubuntu/.kube/config
        remote_src: yes
        owner: ubuntu
        group: ubuntu
        mode: '0600'
      
    - name: Verify kubectl access
      ansible.builtin.shell: kubectl --kubeconfig=/home/ubuntu/.kube/config get nodes
      become_user: ubuntu
      register: kubectl_result
      
    - name: Display cluster nodes
      ansible.builtin.debug:
        msg: "{{ kubectl_result.stdout }}"
