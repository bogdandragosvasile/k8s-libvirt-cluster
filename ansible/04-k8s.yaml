---
- name: Prepare nodes for Kubernetes (swap off, kernel params, containerd, repos)
  hosts: control_plane,workers
  become: true
  tasks:
    - name: Disable swap immediately
      ansible.builtin.shell: swapoff -a

    - name: Disable SWAP in fstab since kubernetes can't work with swap enabled
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^([^#].*?\sswap\s+sw\s+.*)$'
        replace: '# \1'

    - name: Disable firewall (UFW)
      when: ansible_facts['os_family'] == "Debian"
      ansible.builtin.shell: |
        STATUS="$(systemctl is-active ufw.service || true)"
        if [ "${STATUS}" = "active" ]; then
          systemctl stop --now ufw >/dev/null 2>&1
          systemctl disable --now ufw >/dev/null 2>&1
        fi

    - name: Load kernel modules for containerd
      ansible.builtin.copy:
        dest: "/etc/modules-load.d/containerd.conf"
        content: |
          overlay
          br_netfilter

    - name: Set kernel parameters for Kubernetes
      ansible.builtin.copy:
        dest: "/etc/sysctl.d/kubernetes.conf"
        content: |
          net.bridge.bridge-nf-call-iptables = 1
          net.bridge.bridge-nf-call-ip6tables = 1
          net.ipv4.ip_forward = 1

    - name: Apply kernel modules and parameters
      ansible.builtin.shell: modprobe overlay && modprobe br_netfilter && sysctl --system

    - name: Create keyrings directory
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    # FIXED: Add timeout and retry logic for Docker GPG key
    - name: Add Docker GPG key for containerd (with timeout)
      ansible.builtin.shell: |
        timeout 60 curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      retries: 3
      delay: 10
      register: docker_gpg_result
      until: docker_gpg_result.rc == 0

    - name: Add Docker repository for containerd
      ansible.builtin.shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list

    - name: Install containerd
      ansible.builtin.apt:
        name: containerd.io
        state: present
        update_cache: yes
        lock_timeout: 1200

    - name: Configure containerd to use systemd cgroups
      ansible.builtin.shell: |
        mkdir -p /etc/containerd && \
        containerd config default > /etc/containerd/config.toml && \
        sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

    - name: Restart containerd service
      ansible.builtin.systemd:
        state: restarted
        name: containerd
        enabled: true

    # Remove existing broken Kubernetes repository and recreate it properly
    - name: Remove existing broken Kubernetes repository
      ansible.builtin.file:
        path: /etc/apt/sources.list.d/kubernetes.list
        state: absent

    - name: Remove existing Kubernetes GPG key
      ansible.builtin.file:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        state: absent

    - name: Extract Kubernetes version (reliable method)
      ansible.builtin.set_fact:
        k8s_major_minor: "1.30"

    - name: Add Kubernetes GPG key (pkgs.k8s.io) with timeout
      ansible.builtin.shell: |
        timeout 60 curl -fsSL https://pkgs.k8s.io/core:/stable:/v{{ k8s_major_minor }}/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
      retries: 3
      delay: 10
      register: k8s_gpg_result
      until: k8s_gpg_result.rc == 0

    - name: Add Kubernetes apt repository with correct URL
      ansible.builtin.shell: |
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v{{ k8s_major_minor }}/deb/ /" > /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes
        lock_timeout: 1200

    - name: Install kubelet and kubeadm
      ansible.builtin.apt:
        name:
          - "kubelet={{ K8S_VERSION }}"
          - "kubeadm={{ K8S_VERSION }}"
        state: present
        update_cache: yes
        lock_timeout: 1200

    - name: Hold kubelet and kubeadm versions
      ansible.builtin.shell: apt-mark hold kubelet kubeadm

- name: Install kubectl on control plane nodes
  hosts: control_plane
  become: true
  tasks:
    - name: Install kubectl
      ansible.builtin.apt:
        name: "kubectl={{ K8S_VERSION }}"
        state: present
        update_cache: yes
        lock_timeout: 1200
        allow_downgrade: true

    - name: Hold kubectl version
      ansible.builtin.shell: apt-mark hold kubectl
